# Step 3: Sequence alignment
configfile: "config/config.yaml"
indir = config["input_namespace"]
outdir = config["output_namespace"]

serotype = ['Dengue_1', 'Dengue_2', 'Dengue_3', 'Dengue_4']
reference_serotype=("1" "2" "3" "4")

def resource(name = ""):
    from snakemake.remote import AUTO
    filename = srcdir(f"../resources/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return srcdir(filename)

rule all:
    input:
        expand(
            "results/{outdir}/Aligned_{serotype}/nextalign.aligned.fasta",
            outdir=outdir,
            serotype=serotype,
        )

for serotype, reference_serotype in zip(serotype, reference_serotype):
    rule:
        name:
            f"sequence_alignment_{serotype}"
        input:
            sequences = f"results/{indir}/Unaligned_{serotype}.fasta",
            reference = resource(f"reference_genomes/reference_denv{reference_serotype}.fasta"),
            genemap = resource(f"genemap/genemap_denv{reference_serotype}.gff"),
        output:
            align_dir = f"results/{outdir}/Aligned_{serotype}/nextalign.aligned.fasta",
        log:
            "logs/sequence_alignment.log"
        conda:
            "envs/alignment.yaml"
        message:
            "Running sequence alignment for Dengue serotypes"
        params:
            output_serotype = f"results/{outdir}/Aligned_{serotype}",
            resources_dir = resource(),
        shell:
            """
            nextalign run \
                --reference={input.reference} \
                --genemap={input.genemap} \
                --output-all={params.output_serotype} \
                {input.sequences}
            """
