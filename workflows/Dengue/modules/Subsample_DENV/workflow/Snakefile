# Step 5a: Subsampler DENV
configfile: "config/config.yaml"


indir = config["input_namespace"]
outdir = config["output_namespace"]
params = config["params"]


def resource(name=""):
    from snakemake.remote import AUTO

    filename = srcdir(f"../resources/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return filename


rule subsample:
    input:
        fasta_files=expand(
            "results/{indir}/{{name}}_EG.fasta",
            indir=indir["fasta"],
        ),
        metadata_files=expand(
            "results/{indir}/{{name}}_infoTbl.csv",
            indir=indir["metadata"],
        ),
        script=resource("scripts/subsampler.R"),
    output:
        subsample_fasta=f"results/{outdir}/subsampled_{{name}}.fasta",
        subsample_csv=f"results/{outdir}/subsampled_{{name}}_infoTbl.csv",
        subsample_tsv=f"results/{outdir}/subsampled_{{name}}_infoTbl.tsv",
    params:
        country=params["country"],
        number_sequences=params["number_sequences"],
        prop_rd=params["prop_rd"],
        prop_or=params["prop_or"],
        outdir=f"results/{outdir}",
    log:
        "logs/subsample_{name}.log",
    message:
        "Subsampling Dengue virus E gene sequences based on specified criteria."
    shell:
        """
        rscript {input.script} \
            --metadata {input.metadata_files} \
            --fasta {input.fasta_files} \
            --country {params.country} \
            --number_sequences {params.number_sequences} \
            --prop_rd {params.prop_rd} \
            --prop_or {params.prop_or} \
            --output_dir {params.outdir}
        """

rule _test:
    input:
        f"results/{outdir}/subsampled_Dengue_1.fasta",
        f"results/{outdir}/subsampled_Dengue_2.fasta",
        f"results/{outdir}/subsampled_Dengue_3.fasta",
        f"results/{outdir}/subsampled_Dengue_4.fasta",
